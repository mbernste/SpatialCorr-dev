## 

configfile: 'config.json'

rule all:
    input:
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.0.tsv",    
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.0.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.0025.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.025.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.05.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.1.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.0025.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.025.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.05.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.1.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_within_dino-config_static.corr.differ.means.2.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_static.corr.differ.means.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_1.differ.means.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_2.differ.means.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_4.differ.means.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_0.static.means_CALML5.spotwise.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_1.static.means_CALML5.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_2.static.means_CALML5.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_4.static.means_CALML5.tsv",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_2.CALML5_sigma_10_cs_0.035.json",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_4.CALML5_sigma_10_cs_0.035.json",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_8.CALML5_sigma_10_cs_0.035.json",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_5.CALML5_sigma_10_cs_0.035.json",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_5.CALML5_sigma_10_cs_0.035_v2.json",
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_5.CALML5_sigma_10_cs_0.035_v3.json"
         


############################################################################
# Null samples based on CALML5 and CALML5 in which correlation at all spots 
# is zero. No changes in mean expression across the slide. Note, we are 
# considering five distinct regions.
#############################################################################

rule generate_data_sigma_10_cs_0_0_CALML5_CALML5_condition_mult_clusts:
    output:
        [
            f"{config['output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts.cs_0_0.json -s spotwise -n 200 -o {config['output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_0_CALML5_CALML5_condition_mult_clusts:
    input:
        [
            f"{config['output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        [
            f"{config['dino_output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts",
            f"python run_dino.py {config['output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts {config['dino_output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_0_CALML5_CALML5_condition_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/gene.all_CALML5.sigma.10.cs.0_0.condition.mult_clusts -c cluster -f dino -n 20 -b 5 -t 10 -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

#############################################################################
# Null samples based on PECAM1 and PECAM1 in which correlation at all spots 
# is zero. No changes in mean expression across the slide.
#############################################################################

#### TODO


############################################################################
# Alternative samples based on HSP90AB1 and HSP90AB1 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
#############################################################################

DSET_HSP90AB1_HSP90AB1_S_10_CS_0_0025_COND_MULT_PER_CLUST_STATS = 'gene.all_HSP90AB1.sigma.10.cs.0_0025.condition.mult_clusts.per_clust_stats'
DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS = 'gene.all_HSP90AB1.sigma.10.cs.0_025.condition.mult_clusts.per_clust_stats'
DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS = 'gene.all_HSP90AB1.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats'
DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS = 'gene.all_HSP90AB1.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats'
DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS = 'gene.all_HSP90AB1.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats'
DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS = 'gene.all_HSP90AB1.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats'

rule generate_data_sigma_10_cs_0_025_to_0_2_HSP90AB1_HSP90AB1_cond_mult_clusts_per_clust_stats:
    output:
        #[
        #    f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(30)
        #],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            #f"mkdir -p {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            #f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_HSP90AB1.cs_0_025.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_HSP90AB1.cs_0_05.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_HSP90AB1.cs_0_1.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_HSP90AB1.cs_0_2.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_HSP90AB1.cs_0_4.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_025_to_0_2_HSP90AB1_HSP90AB1_cond_mult_clusts_per_clust_stats:
    input:
        #[
        #    f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(30)
        #],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        #[
        #    f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(30)
        #],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            #f"mkdir -p {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            #f"python run_dino.py {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_025_to_0_2_HSP90AB1_HSP90AB1_cond_mult_clusts_per_clust_stats:
    input:
        #[
        #    f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(3)
        #],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        #out_0_025=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_025.condition.mult_clusts.per_clust_stats.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats.tsv",
        out_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats.tsv",
        out_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            #f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_10_condition_none_test_whr_sigma_10_cs_0_025_to_0_2_HSP90AB1_HSP90AB1_cond_mult_clusts_per_clust_stats:
    input:
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        out_0_025=f"{config['spatialcorr_output_location']}/sigma.10.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_025.condition.mult_clusts.per_clust_stats.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.10.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.10.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats.tsv",
        out_0_2=f"{config['spatialcorr_output_location']}/sigma.10.condition.mult_clusts.test.within.features.dino-gene.all_HSP90AB1_HSP90AB1.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 10 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 10 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 10 -t 10 -o {{output.out_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_HSP90AB1_HSP90AB1_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 10 -t 10 -o {{output.out_0_2}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)



############################################################################
# Alternative samples based on RPS10 and RPS10 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
#############################################################################

#DSET_RPS10_RPS10_S_10_CS_0_0025_COND_MULT_PER_CLUST_STATS = 'gene.all_RPS10.sigma.10.cs.0_0025.condition.mult_clusts.per_clust_stats'
DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS = 'gene.all_RPS10.sigma.10.cs.0_025.condition.mult_clusts.per_clust_stats'
DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS = 'gene.all_RPS10.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats'
DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS = 'gene.all_RPS10.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats'
DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS = 'gene.all_RPS10.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats'
DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS = 'gene.all_RPS10.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats'

rule generate_data_sigma_10_cs_0_025_to_0_2_RPS10_RPS10_cond_mult_clusts_per_clust_stats:
    output:
        #[   
        #    f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(30)
        #],
        [   
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [   
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [   
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            #f"mkdir -p {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            #f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_RPS10.cs_0_025.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_RPS10.cs_0_05.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_RPS10.cs_0_1.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_RPS10.cs_0_2.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_RPS10.cs_0_4.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_025_to_0_2_RPS10_RPS10_cond_mult_clusts_per_clust_stats:
    input:
        #[   
        #    f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(30)
        #],
        [
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        #[
        #    f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(30)
        #],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            #f"mkdir -p {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            #f"python run_dino.py {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_025_to_0_2_RPS10_RPS10_cond_mult_clusts_per_clust_stats:
    input:
        #[
        #    f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
        #    for d_i in range(3)
        #],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        #out_0_025=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_RPS10_RPS10.sigma.10.cs.0_025.condition.mult_clusts.per_clust_stats.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_RPS10_RPS10.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_RPS10_RPS10.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats.tsv",
        out_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_RPS10_RPS10.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats.tsv",
        out_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_RPS10_RPS10.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            #f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_RPS10_RPS10_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


############################################################################
# Alternative samples based on S100A13 and S100A13 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
#############################################################################

DSET_S100A13_S100A13_S_10_CS_0_0025_COND_MULT_PER_CLUST_STATS = 'gene.all_S100A13.sigma.10.cs.0_0025.condition.mult_clusts.per_clust_stats'
DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS = 'gene.all_S100A13.sigma.10.cs.0_025.condition.mult_clusts.per_clust_stats'
DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS = 'gene.all_S100A13.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats'
DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS = 'gene.all_S100A13.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats'
DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS = 'gene.all_S100A13.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats'
DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS = 'gene.all_S100A13.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats'

rule generate_data_sigma_10_cs_0_025_to_0_2_S100A13_S100A13_cond_mult_clusts_per_clust_stats:
    output:
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_05.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_1.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_2.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_4.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_025_to_0_2_S100A13_S100A13_cond_mult_clusts_per_clust_stats:
    input:
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_025_to_0_2_S100A13_S100A13_cond_mult_clusts_per_clust_stats:
    input:
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats.tsv",
        out_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats.tsv",
        out_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


############################################################################
# Alternative samples based on ILF2 and ILF2 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
#############################################################################

DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT_PER_CLUST_STATS = 'gene.all_ILF2.sigma.10.cs.0_0025.condition.mult_clusts.per_clust_stats'
DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT_PER_CLUST_STATS = 'gene.all_ILF2.sigma.10.cs.0_025.condition.mult_clusts.per_clust_stats'
DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS = 'gene.all_ILF2.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats'
DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS = 'gene.all_ILF2.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats'
DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS = 'gene.all_ILF2.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats'
DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS = 'gene.all_ILF2.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats'

rule generate_data_sigma_10_cs_0_025_to_0_2_ILF2_ILF2_cond_mult_clusts_per_clust_stats:
    output:
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_05.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_1.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_2.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_4.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_sigma_10_cs_0_025_to_0_2_ILF2_ILF2_cond_mult_clusts_per_clust_stats:
    input:
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [   
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_025_to_0_2_ILF2_ILF2_cond_mult_clusts_per_clust_stats:
    input:
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats.tsv",
        out_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats.tsv",
        out_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)



############################################################################
# Alternative samples based on NDUFS8 and NDUFS8 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
#############################################################################

DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS = 'gene.all_NDUFS8.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats'
DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS = 'gene.all_NDUFS8.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats'
DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS = 'gene.all_NDUFS8.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats'
DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS = 'gene.all_NDUFS8.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats'

rule generate_data_sigma_10_cs_0_025_to_0_2_NDUFS8_NDUFS8_cond_mult_clusts_per_clust_stats:
    output:
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_NDUFS8.cs_0_05.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_NDUFS8.cs_0_1.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_NDUFS8.cs_0_2.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python simulate_data_within_condition_est_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_NDUFS8.cs_0_4.per_clust_ests.json -s spotwise -n 30 -o {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_sigma_10_cs_0_025_to_0_2_NDUFS8_NDUFS8_cond_mult_clusts_per_clust_stats:
    input:
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}",
            f"python run_dino.py {config['output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_025_to_0_2_NDUFS8_NDUFS8_cond_mult_clusts_per_clust_stats:
    input:
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ],
        [
            f"{config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS}/{d_i}.tsv"
            for d_i in range(3)
        ]
    output:
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_NDUFS8_NDUFS8.sigma.10.cs.0_05.condition.mult_clusts.per_clust_stats.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_NDUFS8_NDUFS8.sigma.10.cs.0_1.condition.mult_clusts.per_clust_stats.tsv",
        out_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_NDUFS8_NDUFS8.sigma.10.cs.0_2.condition.mult_clusts.per_clust_stats.tsv",
        out_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_NDUFS8_NDUFS8.sigma.10.cs.0_4.condition.mult_clusts.per_clust_stats.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_05_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_1_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_2_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_NDUFS8_NDUFS8_S_10_CS_0_4_COND_MULT_PER_CLUST_STATS} -c cluster -f dino -n 2 -b 5 -t 10 -o {{output.out_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate alternative data for two histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means also differ between two 
#   regions. The two regions are based on real clusters 
#   computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_FIVE_CLUSTS_DIFF_CORR_0_1_RPS10 = 'gene.RPS10.corr_diff.0_1.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10 = 'gene.RPS10.corr_diff.0_2.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10 = 'gene.RPS10.corr_diff.0_4.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10 = 'gene.RPS10.corr_diff.0_6.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10 = 'gene.RPS10.corr_diff.0_8.condition.mult_clusts'

rule generate_data_diff_corr_between_0_1_to_0_4_RPS10_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_1_RPS10_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_RPS10}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_2_RPS10_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_4_RPS10_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_6_RPS10_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_8_RPS10_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_diff_corr_between_0_1_to_0_4_RPS10_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [   
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}"
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_bhr_diff_corr_between_0_1_to_0_4_RPS10_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.RPS10.corr_diff.0_2.condition.mult_clusts.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.RPS10.corr_diff.0_4.condition.mult_clusts.tsv",
        diff_0_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.RPS10.corr_diff.0_6.condition.mult_clusts.tsv",
        diff_0_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.RPS10.corr_diff.0_8.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_6}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

###############################################################
#   Generate alternative data for five histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means also differ between two 
#   regions. The data is based off gene HSP90AB1. The five 
#   regions are based on real clusters computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_FIVE_CLUSTS_DIFF_CORR_0_1_HSP90AB1 = 'gene.HSP90AB1.corr_diff.0_1.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1 = 'gene.HSP90AB1.corr_diff.0_2.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1 = 'gene.HSP90AB1.corr_diff.0_4.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1 = 'gene.HSP90AB1.corr_diff.0_6.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1 = 'gene.HSP90AB1.corr_diff.0_8.condition.mult_clusts'

rule generate_data_diff_corr_between_0_1_to_0_4_HSP90AB1_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_2_HSP90AB1_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_4_HSP90AB1_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_6_HSP90AB1_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_8_HSP90AB1_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_diff_corr_between_0_1_to_0_4_HSP90AB1_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_bhr_diff_corr_between_0_1_to_0_4_HSP90AB1_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.HSP90AB1.corr_diff.0_2.condition.mult_clusts.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.HSP90AB1.corr_diff.0_4.condition.mult_clusts.tsv",
        diff_0_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.HSP90AB1.corr_diff.0_6.condition.mult_clusts.tsv",
        diff_0_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.HSP90AB1.corr_diff.0_8.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_6}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

###############################################################
#   Generate alternative data for five histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means also differ between two 
#   regions. The data is based off gene S100A13. The five 
#   regions are based on real clusters computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_FIVE_CLUSTS_DIFF_CORR_0_1_S100A13 = 'gene.S100A13.corr_diff.0_1.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13 = 'gene.S100A13.corr_diff.0_2.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13 = 'gene.S100A13.corr_diff.0_4.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13 = 'gene.S100A13.corr_diff.0_6.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13 = 'gene.S100A13.corr_diff.0_8.condition.mult_clusts'

rule generate_data_diff_corr_between_0_1_to_0_4_S100A13_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_2_S100A13_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_4_S100A13_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_6_S100A13_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_8_S100A13_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_diff_corr_between_0_1_to_0_4_S100A13_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_bhr_diff_corr_between_0_1_to_0_4_S100A13_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.S100A13.corr_diff.0_2.condition.mult_clusts.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.S100A13.corr_diff.0_4.condition.mult_clusts.tsv",
        diff_0_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.S100A13.corr_diff.0_6.condition.mult_clusts.tsv",
        diff_0_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.S100A13.corr_diff.0_8.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_6}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate alternative data for five histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means also differ between two 
#   regions. The data is based off gene ILF2. The five 
#   regions are based on real clusters computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_FIVE_CLUSTS_DIFF_CORR_0_1_ILF2 = 'gene.ILF2.corr_diff.0_1.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2 = 'gene.ILF2.corr_diff.0_2.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2 = 'gene.ILF2.corr_diff.0_4.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2 = 'gene.ILF2.corr_diff.0_6.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2 = 'gene.ILF2.corr_diff.0_8.condition.mult_clusts'

rule generate_data_diff_corr_between_0_1_to_0_4_ILF2_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_2_ILF2_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_4_ILF2_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_6_ILF2_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_6_ILF2_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_diff_corr_between_0_1_to_0_4_ILF2_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule run_test_sigma_5_condition_clust_test_bhr_diff_corr_between_0_1_to_0_4_ILF2_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.ILF2.corr_diff.0_2.condition.mult_clusts.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.ILF2.corr_diff.0_4.condition.mult_clusts.tsv",
        diff_0_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.ILF2.corr_diff.0_6.condition.mult_clusts.tsv",
        diff_0_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.ILF2.corr_diff.0_8.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_6}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate alternative data for five histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means also differ between two 
#   regions. The data is based off gene NDUFS8. The five 
#   regions are based on real clusters computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_FIVE_CLUSTS_DIFF_CORR_0_1_NDUFS8 = 'gene.NDUFS8.corr_diff.0_1.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8 = 'gene.NDUFS8.corr_diff.0_2.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8 = 'gene.NDUFS8.corr_diff.0_4.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8 = 'gene.NDUFS8.corr_diff.0_6.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8 = 'gene.NDUFS8.corr_diff.0_8.condition.mult_clusts'

rule generate_data_diff_corr_between_0_1_to_0_4_NDUFS8_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_2_NDUFS8_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_4_NDUFS8_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_6_NDUFS8_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}",
            f"python simulate_data_between_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_8_NDUFS8_mult_clusts.per_clust_ests.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_diff_corr_between_0_1_to_0_4_NDUFS8_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_bhr_diff_corr_between_0_1_to_0_4_NDUFS8_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ],  
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.NDUFS8.corr_diff.0_2.condition.mult_clusts.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.NDUFS8.corr_diff.0_4.condition.mult_clusts.tsv",
        diff_0_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.NDUFS8.corr_diff.0_6.condition.mult_clusts.tsv",
        diff_0_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.NDUFS8.corr_diff.0_8.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_6_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_6}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_8_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)



######################################################################################
#   Simulate multiple genes. Test how the method performs as more genes are included
#   in the anlaysis.
######################################################################################

DSET_MULT_GENES_9_CS_0_01_RPS10 = 'mg_9.gene_RPS10.sigma_10.cs_0.01'

rule generate_data_multiple_genes_cs_0_05_three_to_seven_RPS10:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}",
            f"python simulate_data_within_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_RPS10_mult_clusts_cs_0_01.json -o {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_cs_0_05_three_to_seven_RPS10:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [   
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10} {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_multiple_genes_cs_0_05_three_to_seven_RPS10:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.2.gene.RPS10.cs.0_01.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.4.gene.RPS10.cs.0_01.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.6.gene.RPS10.cs.0_01.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.8.gene.RPS10.cs.0_01.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10} -f dino -n 2 -b 5 -t 10 -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10} -f dino -n 2 -b 5 -t 10 -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10} -f dino -n 2 -b 5 -t 10 -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_RPS10} -f dino -n 2 -b 5 -t 10 -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

######################################################################################
#   Simulate multiple genes. Use gene HSP90AB1
######################################################################################

DSET_MULT_GENES_9_CS_0_01_HSP90AB1 = 'mg_9.gene_HSP90AB1.sigma_10.cs_0.01'

rule generate_data_multiple_genes_cs_0_05_three_to_seven_HSP90AB1:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}",
            f"python simulate_data_within_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_HSP90AB1_mult_clusts_cs_0_01.json -o {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_cs_0_05_three_to_seven_HSP90AB1:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1} {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_multiple_genes_cs_0_05_three_to_seven_HSP90AB1:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.2.gene.HSP90AB1.cs.0_01.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.4.gene.HSP90AB1.cs.0_01.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.6.gene.HSP90AB1.cs.0_01.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.8.gene.HSP90AB1.cs.0_01.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1} -f dino -n 4 -b 5 -t 10 -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1} -f dino -n 4 -b 5 -t 10 -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1} -f dino -n 4 -b 5 -t 10 -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_HSP90AB1} -f dino -n 4 -b 5 -t 10 -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

######################################################################################
#   Simulate multiple genes. Use gene S100A13
######################################################################################

DSET_MULT_GENES_9_CS_0_01_S100A13 = 'mg_9.gene_S100A13.sigma_10.cs_0.01'

rule generate_data_multiple_genes_cs_0_05_three_to_seven_S100A13:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}",
            f"python simulate_data_within_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_S100A13_mult_clusts_cs_0_01.json -o {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_cs_0_05_three_to_seven_S100A13:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13} {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_multiple_genes_cs_0_05_three_to_seven_S100A13:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.2.gene.S100A13.cs.0_01.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.4.gene.S100A13.cs.0_01.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.6.gene.S100A13.cs.0_01.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.8.gene.S100A13.cs.0_01.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13} -f dino -n 2 -b 5 -t 10 -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13} -f dino -n 2 -b 5 -t 10 -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13} -f dino -n 2 -b 5 -t 10 -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_S100A13} -f dino -n 2 -b 5 -t 10 -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

######################################################################################
#   Simulate multiple genes. Use gene ILF2
######################################################################################

DSET_MULT_GENES_9_CS_0_01_ILF2 = 'mg_9.gene_ILF2.sigma_10.cs_0.01'

rule generate_data_multiple_genes_cs_0_05_three_to_seven_ILF2:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}",
            f"python simulate_data_within_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_ILF2_mult_clusts_cs_0_01.json -o {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_cs_0_05_three_to_seven_ILF2:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2} {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_multiple_genes_cs_0_05_three_to_seven_ILF2:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.2.gene.ILF2.cs.0_01.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.4.gene.ILF2.cs.0_01.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.6.gene.ILF2.cs.0_01.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.8.gene.ILF2.cs.0_01.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2} -f dino -n 2 -b 5 -t 10 -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2} -f dino -n 2 -b 5 -t 10 -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2} -f dino -n 2 -b 5 -t 10 -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_ILF2} -f dino -n 2 -b 5 -t 10 -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


######################################################################################
#   Simulate multiple genes. Use gene NDUFS8
######################################################################################

DSET_MULT_GENES_9_CS_0_01_NDUFS8 = 'mg_9.gene_NDUFS8.sigma_10.cs_0.01'

rule generate_data_multiple_genes_cs_0_05_three_to_seven_NDUFS8:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}",
            f"python simulate_data_within_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_NDUFS8_mult_clusts_cs_0_01.json -o {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_cs_0_05_three_to_seven_NDUFS8:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8} {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_multiple_genes_cs_0_05_three_to_seven_NDUFS8:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.2.gene.NDUFS8.cs.0_01.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.4.gene.NDUFS8.cs.0_01.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.6.gene.NDUFS8.cs.0_01.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-mg.8.gene.NDUFS8.cs.0_01.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8} -f dino -n 2 -b 5 -t 10 -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8} -f dino -n 2 -b 5 -t 10 -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8} -f dino -n 2 -b 5 -t 10 -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_9_CS_0_01_NDUFS8} -f dino -n 2 -b 5 -t 10 -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)



######################################################################################
#   Simulate multiple genes with static correlation within each region, but
#   differing correlations between regions. Use gene RPS10.
######################################################################################

DSET_MULT_GENES_9_DIFF_0_2_RPS10 = 'mg_9.gene_RPS10.diff_0.2'

rule generate_data_multiple_genes_diff_0_2_two_to_eight_RPS10:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}",
            f"python simulate_data_between_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_RPS10_mult_clusts_diff_0_2.json -o {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_diff_0_2_two_to_eight_RPS10:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10} {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_mult_clusts_test_bhr_multiple_genes_diff_0_2_two_to_eight_RPS10:
    input:
        [   
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.2.gene.RPS10.diff.0_2.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.4.gene.RPS10.diff.0_2.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.6.gene.RPS10.diff.0_2.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.8.gene.RPS10.diff.0_2.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_RPS10} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


######################################################################################
#   Simulate multiple genes with static correlation within each region, but
#   differing correlations between regions. Use gene HSP90AB1.
######################################################################################

DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1 = 'mg_9.gene_HSP90AB1.diff_0.2'

rule generate_data_multiple_genes_diff_0_2_two_to_eight_HSP90AB1:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}",
            f"python simulate_data_between_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_HSP90AB1_mult_clusts_diff_0_2.json -o {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_diff_0_2_two_to_eight_HSP90AB1:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1} {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_mult_clusts_test_bhr_multiple_genes_diff_0_2_two_to_eight_HSP90AB1:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.2.gene.HSP90AB1.diff.0_2.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.4.gene.HSP90AB1.diff.0_2.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.6.gene.HSP90AB1.diff.0_2.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.8.gene.HSP90AB1.diff.0_2.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_HSP90AB1} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


######################################################################################
#   Simulate multiple genes with static correlation within each region, but
#   differing correlations between regions. Use gene S100A13.
######################################################################################

DSET_MULT_GENES_9_DIFF_0_2_S100A13 = 'mg_9.gene_S100A13.diff_0.2'

rule generate_data_multiple_genes_diff_0_2_two_to_eight_S100A13:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}",
            f"python simulate_data_between_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_S100A13_mult_clusts_diff_0_2.json -o {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_diff_0_2_two_to_eight_S100A13:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13} {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_mult_clusts_test_bhr_multiple_genes_diff_0_2_two_to_eight_S100A13:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.2.gene.S100A13.diff.0_2.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.4.gene.S100A13.diff.0_2.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.6.gene.S100A13.diff.0_2.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.8.gene.S100A13.diff.0_2.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_S100A13} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


######################################################################################
#   Simulate multiple genes with static correlation within each region, but
#   differing correlations between regions. Use gene ILF2.
######################################################################################

DSET_MULT_GENES_9_DIFF_0_2_ILF2 = 'mg_9.gene_ILF2.diff_0.2'

rule generate_data_multiple_genes_diff_0_2_two_to_eight_ILF2:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}",
            f"python simulate_data_between_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_ILF2_mult_clusts_diff_0_2.json -o {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_diff_0_2_two_to_eight_ILF2:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2} {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_mult_clusts_test_bhr_multiple_genes_diff_0_2_two_to_eight_ILF2:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.2.gene.ILF2.diff.0_2.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.4.gene.ILF2.diff.0_2.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.6.gene.ILF2.diff.0_2.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.8.gene.ILF2.diff.0_2.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_ILF2} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

######################################################################################
#   Simulate multiple genes with static correlation within each region, but
#   differing correlations between regions. Use gene NDUFS8.
######################################################################################

DSET_MULT_GENES_9_DIFF_0_2_NDUFS8 = 'mg_9.gene_NDUFS8.diff_0.2'

rule generate_data_multiple_genes_diff_0_2_two_to_eight_NDUFS8:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}",
            f"python simulate_data_between_mult_genes_est_condition.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_9_NDUFS8_mult_clusts_diff_0_2.json -o {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_diff_0_2_two_to_eight_NDUFS8:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30) # TODO change to 30
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}",
            f"python run_dino.py -g 9 {config['output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8} {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_mult_clusts_test_bhr_multiple_genes_diff_0_2_two_to_eight_NDUFS8:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.2.gene.NDUFS8.diff.0_2.condition.mult_clusts.tsv",
        genes_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.4.gene.NDUFS8.diff.0_2.condition.mult_clusts.tsv",
        genes_6=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.6.gene.NDUFS8.diff.0_2.condition.mult_clusts.tsv",
        genes_8=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-mg.8.gene.NDUFS8.diff.0_2.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 2 -o {{output.genes_2}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 4 -o {{output.genes_4}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 6 -o {{output.genes_6}}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_9_DIFF_0_2_NDUFS8} -f dino -n 5 -b 5 -t 10 -w -c cluster -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)










#################################### OLD 1 #######################################3







############################################################################
# Alternative samples based on S100A13 and S100A13 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
#############################################################################

DSET_S100A13_S100A13_S_10_CS_0_0025_COND_MULT = 'gene.all_S100A13.sigma.10.cs.0_0025.condition.mult_clusts'
DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT = 'gene.all_S100A13.sigma.10.cs.0_025.condition.mult_clusts'
DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT = 'gene.all_S100A13.sigma.10.cs.0_05.condition.mult_clusts'
DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT = 'gene.all_S100A13.sigma.10.cs.0_1.condition.mult_clusts'
DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT = 'gene.all_S100A13.sigma.10.cs.0_2.condition.mult_clusts'

rule generate_data_sigma_10_cs_0_025_to_0_2_S100A13_S100A13_cond_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30) # 30
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_025.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_05.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_1.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_S100A13.cs_0_2.json -s spotwise -n 30 -o {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_025_to_0_2_S100A13_S100A13_cond_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT} {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_025_to_0_2_S100A13_S100A13_cond_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        out_0_025=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_025.condition.mult_clusts.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_05.condition.mult_clusts.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_1.condition.mult_clusts.tsv",
        out_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_S100A13_S100A13.sigma.10.cs.0_2.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_025_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_05_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_1_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_S100A13_S100A13_S_10_CS_0_2_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_2}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


############################################################################
# Alternative samples based on ILF2 and ILF2 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
#############################################################################

DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT = 'gene.all_ILF2.sigma.10.cs.0_0025.condition.mult_clusts'
DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT = 'gene.all_ILF2.sigma.10.cs.0_025.condition.mult_clusts'
DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT = 'gene.all_ILF2.sigma.10.cs.0_05.condition.mult_clusts'
DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT = 'gene.all_ILF2.sigma.10.cs.0_1.condition.mult_clusts'

rule generate_data_sigma_10_cs_0_0025_to_0_1_ILF2_ILF2_cond_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_0025.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_025.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_05.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_ILF2.cs_0_1.json -s spotwise -n 30 -o {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_0025_to_0_1_ILF2_ILF2_cond_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT} {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_0025_to_0_1_ILF2_ILF2_cond_mult_clusts:
    input:
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        out_0_0025=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_0025.condition.mult_clusts.tsv",
        out_0_025=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_025.condition.mult_clusts.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_05.condition.mult_clusts.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_ILF2_ILF2.sigma.10.cs.0_1.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_0025_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_0025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_025_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_05_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_ILF2_ILF2_S_10_CS_0_1_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_1}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

############################################################################
# Alternative samples based on PECAM1 and PECAM1 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide. The slide is divided into five clusters.
############################################################################

DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT = 'gene.all_PECAM1.sigma.10.cs.0_0025.condition.mult_clusts'
DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT = 'gene.all_PECAM1.sigma.10.cs.0_025.condition.mult_clusts'
DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT = 'gene.all_PECAM1.sigma.10.cs.0_05.condition.mult_clusts'
DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT = 'gene.all_PECAM1.sigma.10.cs.0_1.condition.mult_clusts'

rule generate_data_sigma_10_cs_0_0025_to_0_1_PECAM1_PECAM1_cond_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30) # 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}",
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_PECAM1.cs_0_0025.json -s spotwise -n 30 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_PECAM1.cs_0_025.json -s spotwise -n 30 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_PECAM1.cs_0_05.json -s spotwise -n 30 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}",
            f"python simulate_data_within_condition.py -i {config['simulation_configs']}/sim_config_within_changing_corrs_mult_clusts_PECAM1.cs_0_1.json -s spotwise -n 30 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_0025_to_0_1_PECAM1_PECAM1_cond_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}",
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_0025_to_0_1_PECAM1_PECAM1_cond_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        out_0_0025=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_PECAM1.sigma.10.cs.0_0025.condition.mult_clusts.tsv",
        out_0_025=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_PECAM1.sigma.10.cs.0_025.condition.mult_clusts.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_PECAM1.sigma.10.cs.0_05.condition.mult_clusts.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.within.features.dino-gene.all_PECAM1.sigma.10.cs.0_1.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_0025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1_COND_MULT} -c cluster -f dino -n 20 -b 5 -t 10 -o {{output.out_0_1}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate null data for two histological regions in which
#   there is zero correlation at each spot, but means differ
#   between two regions. There are five distinct regions 
#   based on clustering results from experimental data.
#
#   Run the BHR test on these data.
###############################################################

DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS = 'gene.diff_means_CALML5_PECAM1.corr_diff.0_0.condition.mult_clusts' 

rule generate_data_no_corr_differ_means_mult_clusts:
    output:
        [   
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}",
            f"python simulate_data_within_condition.py -s spotwise -n 200 -i {config['simulation_configs']}/sim_config_diff_means_no_corr_CALML5_PECAM1_mult_clusts.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}"       
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_no_corr_differ_means_mult_clusts:
    input:
        [   
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_bhr_no_corr_differ_means_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.diff_means_CALML5_PECAM1.corr_diff.0_0.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_NO_CORR_DIFFER_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

###############################################################
#   Generate alternative data for two histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means also differ between two 
#   regions. The two regions are based on real clusters 
#   computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS = 'gene.diff_means_CALML5_PECAM1.corr_diff.0_1.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS = 'gene.diff_means_CALML5_PECAM1.corr_diff.0_2.condition.mult_clusts'
DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS = 'gene.diff_means_CALML5_PECAM1.corr_diff.0_4.condition.mult_clusts'

rule generate_data_diff_corr_between_0_1_to_0_4_differ_means_mult_clusts:
    output:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_1_CALML5_PECAM1_mult_clusts.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_2_CALML5_PECAM1_mult_clusts.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_means_diff_corr_0_4_CALML5_PECAM1_mult_clusts.json -o {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_diff_corr_between_0_1_to_0_4_differ_means_mult_clusts:
    input:
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS} {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_bhr_diff_corr_between_0_1_to_0_4_differ_means_mult_clusts:
    input:
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        diff_0_1=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.diff_means_CALML5_PECAM1.corr_diff.0_1.condition.mult_clusts.tsv",
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.diff_means_CALML5_PECAM1.corr_diff.0_2.condition.mult_clusts.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma.5.condition.mult_clusts.test.between.features.dino-gene.diff_means_CALML5_PECAM1.corr_diff.0_4.condition.mult_clusts.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_1_DIFFER_MEANS} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_2_DIFFER_MEANS} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_FIVE_CLUSTS_DIFF_CORR_0_4_DIFFER_MEANS} -f dino -n 5 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)




















# ######################### OLD ##########################################################



























############################################################################
# Null samples based on CALML5 and CALML5 in which correlation at all spots 
# is zero. No changes in mean expression across the slide.
#############################################################################
rule generate_data_sigma_10_cs_0_0_CALML5_CALML5:
    output:
        [
            f"{config['output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.0 -n 200 -g CALML5,CALML5 -o {config['output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_0_CALML5_CALML5:
    input:
        [
            f"{config['output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        [
            f"{config['dino_output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0",
            f"python run_dino.py {config['output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0 {config['dino_output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_0_CALML5_CALML5:
    input:
        [
            f"{config['dino_output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.0.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/g_CALML5.CALML5_sigma_10_cs_0.0 -f dino -n 20 -b 5 -t 10 -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)



#############################################################################
# Null samples based on PECAM1 and PECAM1 in which correlation at all spots 
# is zero. No changes in mean expression across the slide.
#############################################################################
DSET_PECAM1_PECAM1_S_10_CS_0_0 = 'g_PECAM1.PECAM1_sigma_10_cs_0.0'
rule generate_data_sigma_10_cs_0_0_PECAM1_PECAM1:
    output:
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.0 -n 200 -g PECAM1,PECAM1 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_0_PECAM1_PECAM1:
    input:
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}/{d_i}.tsv"
            for d_i in range(200)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_0_PECAM1_PECAM1:
    input:
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0}/{d_i}.tsv"
            for d_i in range(200)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.0.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0} -f dino -n 20 -b 5 -t 10 -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


############################################################################
# Alternative samples based on CALML5 and CALML5 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide.
#############################################################################

DSET_CALML5_CALML5_S_10_CS_0_0025 = 'g_CALML5.CALML5_sigma_10_cs_0.0025' 
DSET_CALML5_CALML5_S_10_CS_0_025 = 'g_CALML5.CALML5_sigma_10_cs_0.025'
DSET_CALML5_CALML5_S_10_CS_0_05 = 'g_CALML5.CALML5_sigma_10_cs_0.05'
DSET_CALML5_CALML5_S_10_CS_0_1 = 'g_CALML5.CALML5_sigma_10_cs_0.1'

rule generate_data_sigma_10_cs_0_0025_to_0_1_CALML5_CALML5:
    output:
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}",
            f"mkdir -p {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}",
            f"mkdir -p {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}",
            f"mkdir -p {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.0025 -n 30 -g CALML5,CALML5 -o {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.025 -n 30 -g CALML5,CALML5 -o {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.05 -n 30 -g CALML5,CALML5 -o {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.1 -n 30 -g CALML5,CALML5 -o {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_sigma_10_cs_0_0025_to_0_1_CALML5_CALML5:
    input:
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}",
            f"mkdir -p {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}",
            f"mkdir -p {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}",
            f"mkdir -p {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}",
            f"python run_dino.py {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025} {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}",
            f"python run_dino.py {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025} {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}",
            f"python run_dino.py {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05} {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}",
            f"python run_dino.py {config['output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1} {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_0025_to_0_1_CALML5_CALML5:
    input:
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        out_0_0025=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.0025.tsv",
        out_0_025=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.025.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.05.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_CALML5.CALML5_sf_spotwise_sigma_10_cs_0.1.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_0025} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_0025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_025} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_05} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_CALML5_CALML5_S_10_CS_0_1} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_1}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

############################################################################
# Alternative samples based on PECAM1 and PECAM1 in which correlation at 
# is changing across the slide. We increase the covariance strength 
# parameter for each set of simulations. No changes in mean expression
# across the slide.
############################################################################

DSET_PECAM1_PECAM1_S_10_CS_0_0025 = 'g_PECAM1.PECAM1_sigma_10_cs_0.0025'
DSET_PECAM1_PECAM1_S_10_CS_0_025 = 'g_PECAM1.PECAM1_sigma_10_cs_0.025'
DSET_PECAM1_PECAM1_S_10_CS_0_05 = 'g_PECAM1.PECAM1_sigma_10_cs_0.05'
DSET_PECAM1_PECAM1_S_10_CS_0_1 = 'g_PECAM1.PECAM1_sigma_10_cs_0.1'

rule generate_data_sigma_10_cs_0_0025_to_0_1_PECAM1_PECAM1:
    output:
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(5)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}",
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}",
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}",
            f"mkdir -p {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.0025 -n 5 -g PECAM1,PECAM1 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.025 -n 5 -g PECAM1,PECAM1 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.05 -n 5 -g PECAM1,PECAM1 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}",
            f"python simulate_data_within_no_condition.py -b 10 -s spotwise -c 0.1 -n 5 -g PECAM1,PECAM1 -o {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_sigma_10_cs_0_0025_to_0_1_PECAM1_PECAM1:
    input:
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(5)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(5)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}",
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}",
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}",
            f"mkdir -p {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}",
            f"python run_dino.py {config['output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1} {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule run_test_sigma_5_condition_none_test_whr_sigma_10_cs_0_0025_to_0_1_PECAM1_PECAM1:
    input:
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05}/{d_i}.tsv"
            for d_i in range(5)
        ],
        [
            f"{config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1}/{d_i}.tsv"
            for d_i in range(5)
        ]
    output:
        out_0_0025=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.0025.tsv",
        out_0_025=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.025.tsv",
        out_0_05=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.05.tsv",
        out_0_1=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-g_PECAM1.PECAM1_sf_spotwise_sigma_10_cs_0.1.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_0025} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_0025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_025} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_025}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_05} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_05}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_PECAM1_PECAM1_S_10_CS_0_1} -f dino -n 20 -b 5 -t 10 -o {{output.out_0_1}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate null data for two histological regions in which
#   there is zero correlation at each spot, but means differ
#   between two regions. The two regions partition the slide
#   in half.
###############################################################
DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS = 'config_static.corr.differ.means.2'
rule generate_data_two_clusts_static_corr_differ_means:
    output:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2) # TODO 200
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/config_static.corr.differ.means.2",
            f"python simulate_data_within_condition.py -s spotwise -n 2 -i {config['simulation_configs']}/sim_config_static_corr_differ_means_2.json -o {config['output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_two_clusts_static_corr_differ_means:
    input:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2) 
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_whr_two_clusts_static_corr_differ_means:
    input:
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_within_dino-config_static.corr.differ.means.2.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_STATIC_CORR_DIFFER_MEANS} -f dino -n 20 -b 5 -t 10 -c cluster -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate null data for two histological regions in which
#   there is zero correlation at each spot, but means differ
#   between two regions. The two regions are based on real
#   clusters computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS = 'config_static.corr.differ.means'
rule generate_data_two_clusts_no_split_static_corr_differ_means:
    output:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}",
            f"python simulate_data_within_condition.py -s spotwise -n 2 -i {config['simulation_configs']}/sim_config_static_corr_differ_means.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_two_clusts_no_split_static_corr_differ_means:
    input:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_whr_two_clusts_no_split_static_corr_differ_means:
    input:
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_static.corr.differ.means.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_DIFFER_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate alternative data for two histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means also differ between two 
#   regions. The two regions are based on real clusters 
#   computed on the data.
#
#   Run the BHR test on these data.
###############################################################
DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS = 'config_differ.corr_between_0_1.differ.means'
DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS = 'config_differ.corr_between_0_2.differ.means'
DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS = 'config_differ.corr_between_0_4.differ.means'

rule generate_data_diff_corr_between_0_1_to_0_4_differ_means:
    output:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_corrs_0_1_differ_means.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_corrs_0_2_differ_means.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_corrs_0_4_differ_means.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_two_clusts_no_split_diff_corr_between_0_1_to_0_4_differ_means:
    input:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule run_test_sigma_5_condition_clust_test_bhr_two_clusts_no_split_diff_corr_between_0_1_to_0_4_differ_means:
    input:
        [   
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        diff_0_1=f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_1.differ.means.tsv",
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_2.differ.means.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_4.differ.means.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_DIFFER_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output.diff_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_DIFFER_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_DIFFER_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

###############################################################
#   Generate null data for two histological regions in which
#   there is zero correlation at each spot and means are the
#   same (based on CALML5) between the two regions. The two 
#   regions are based on real clusters computed on the data.
#
#   Run the BHR test on these data.
###############################################################

DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS = 'config_differ.corr_between_0_0.static.means_CALML5.spotwise'

rule generate_data_two_clusts_no_split_static_corr_static_means:
    output:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2) # TODO change to 200
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 2 -i {config['simulation_configs']}/sim_config_diff_corrs_0_0_static_means_CALML5.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_two_clusts_no_split_static_corr_static_means:
    input:
        [   
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        [   
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_whr_two_clusts_no_split_static_corr_static_means:
    input:
        [   
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_0.static.means_CALML5.spotwise.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_STATIC_CORR_STATIC_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


###############################################################
#   Generate alternative data for two histological regions in 
#   which there is static correlation within region, but it 
#   differs between them. The means don't differ between two 
#   regions. The two regions are based on real clusters 
#   computed on the data.
#
#   Run the BHR test on these data.
###############################################################

DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS = 'config_differ.corr_between_0_1.static.means_CALML5'
DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS = 'config_differ.corr_between_0_2.static.means_CALML5'
DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS = 'config_differ.corr_between_0_4.static.means_CALML5'

rule generate_data_diff_corr_between_0_1_to_0_4_static_means:
    output:
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_corrs_0_1_static_means_CALML5.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_corrs_0_2_static_means_CALML5.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}",
            f"python simulate_data_between.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_diff_corrs_0_4_static_means_CALML5.json -o {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_two_clusts_no_split_diff_corr_between_0_1_to_0_4_static_means:
    input:
        [   
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [   
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [   
            f"{config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        [   
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}",
            f"python run_dino.py {config['output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS} {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_clust_test_bhr_two_clusts_no_split_diff_corr_between_0_1_to_0_4_static_means:
    input:
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        diff_0_1=f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_1.static.means_CALML5.tsv",
        diff_0_2=f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_2.static.means_CALML5.tsv",
        diff_0_4=f"{config['spatialcorr_output_location']}/sigma_5_condition_custer_test_between_dino-config_differ.corr_between_0_4.static.means_CALML5.tsv"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output.diff_0_1}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_2_STATIC_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output.diff_0_2}}",
            f"python run_spatialcorr_on_sim.py {config['dino_output_location']}/{DSET_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_4_STATIC_MEANS} -f dino -n 20 -b 5 -t 10 -w -c cluster -o {{output.diff_0_4}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)



######################################################################################
#   Simulate multiple genes. Test how the method performs as more genes are included
#   in the anlaysis.
######################################################################################

DSET_MULT_GENES_2_CS_0_035 = 'mg_2.CALML5_sigma_10_cs_0.035'
DSET_MULT_GENES_4_CS_0_035 = 'mg_4.CALML5_sigma_10_cs_0.035'
DSET_MULT_GENES_8_CS_0_035 = 'mg_8.CALML5_sigma_10_cs_0.035'

rule generate_data_multiple_genes_cs_0_035_two_to_eight_CALML5:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_2_CS_0_035}/{d_i}.tsv"
            for d_i in range(2) # TODO change to 30
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_4_CS_0_035}/{d_i}.tsv"
            for d_i in range(2) # TODO change to 30
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_8_CS_0_035}/{d_i}.tsv"
            for d_i in range(2) # TODO change to 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_2_CS_0_035}",
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_4_CS_0_035}",
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_8_CS_0_035}",
            f"python simulate_data_within_mult_genes_no_condition.py -s spotwise -b 10 -c 0.035 -n 2 -g CALML5,CALML5 -o {config['output_location']}/{DSET_MULT_GENES_2_CS_0_035}",
            f"python simulate_data_within_mult_genes_no_condition.py -s spotwise -b 10 -c 0.035 -n 2 -g CALML5,CALML5,CALML5,CALML5 -o {config['output_location']}/{DSET_MULT_GENES_4_CS_0_035}",
            f"python simulate_data_within_mult_genes_no_condition.py -s spotwise -b 10 -c 0.035 -n 2 -g CALML5,CALML5,CALML5,CALML5,CALML5,CALML5,CALML5,CALML5 -o {config['output_location']}/{DSET_MULT_GENES_8_CS_0_035}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_cs_0_035_two_to_eight_CALML5:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_2_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_4_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_8_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_2_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_4_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_8_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_2_CS_0_035}",
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_4_CS_0_035}",
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_8_CS_0_035}",
            f"python run_dino.py -g 2 {config['output_location']}/{DSET_MULT_GENES_2_CS_0_035} {config['dino_output_location']}/{DSET_MULT_GENES_2_CS_0_035}",
            f"python run_dino.py -g 4 {config['output_location']}/{DSET_MULT_GENES_4_CS_0_035} {config['dino_output_location']}/{DSET_MULT_GENES_4_CS_0_035}",
            f"python run_dino.py -g 8 {config['output_location']}/{DSET_MULT_GENES_8_CS_0_035} {config['dino_output_location']}/{DSET_MULT_GENES_8_CS_0_035}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_multiple_genes_cs_0_035_two_to_eight_CALML5:
    input:
        [   
            f"{config['dino_output_location']}/{DSET_MULT_GENES_2_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_MULT_GENES_4_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [   
            f"{config['dino_output_location']}/{DSET_MULT_GENES_8_CS_0_035}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        genes_2=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_2.CALML5_sigma_10_cs_0.035.json",
        genes_4=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_4.CALML5_sigma_10_cs_0.035.json",
        genes_8=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_8.CALML5_sigma_10_cs_0.035.json"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_2_CS_0_035} -f dino -n 20 -b 5 -t 10 -m 2 -o {{output.genes_2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_4_CS_0_035} -f dino -n 20 -b 5 -t 10 -m 4 -o {{output.genes_4}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_8_CS_0_035} -f dino -n 20 -b 5 -t 10 -m 8 -o {{output.genes_8}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


######################################################################################
#   Simulate datasets with 5 genes for comparing the joint vs pairwise tests.
######################################################################################
DSET_MULT_GENES_5_CS_0_035_V1 = 'mg_5.CALML5_sigma_10_cs_0.035'
DSET_MULT_GENES_5_CS_0_035_V2 = 'mg_5.CALML5_sigma_10_cs_0.035_v2'
DSET_MULT_GENES_5_CS_0_035_V3 = 'mg_5.CALML5_sigma_10_cs_0.035_v3'

rule generate_data_multiple_genes_cs_0_035_five_CALML5:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}/{d_i}.tsv"
            for d_i in range(2) # TODO change to 30
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}/{d_i}.tsv"
            for d_i in range(2) # TODO change to 30
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}/{d_i}.tsv"
            for d_i in range(2) # TODO change to 40
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}",
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}",
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}",
            f"python simulate_data_within_mult_genes_no_condition.py -s spotwise -b 10 -c 0.035 -n 2 -g CALML5,CALML5,CALML5,CALML5,CALML5 -o {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}",
            f"python simulate_data_within_mult_genes_no_condition.py -s spotwise -b 10 -c 0.035 -n 2 -g CALML5,CALML5,CALML5,CALML5,CALML5 -o {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}",
            f"python simulate_data_within_mult_genes_no_condition.py -s spotwise -b 10 -c 0.035 -n 2 -g CALML5,CALML5,CALML5,CALML5,CALML5 -o {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


rule dino_normalize_multiple_genes_cs_0_035_five_CALML5:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}",
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}",
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}",
            f"python run_dino.py -g 5 {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1} {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}",
            f"python run_dino.py -g 5 {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2} {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}",
            f"python run_dino.py -g 5 {config['output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3} {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_sigma_5_condition_none_test_whr_multiple_genes_cs_0_035_five_CALML5:
    input:
        [  
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [  
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [  
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        v1=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_5.CALML5_sigma_10_cs_0.035.json",
        v2=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_5.CALML5_sigma_10_cs_0.035_v2.json",
        v3=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_5.CALML5_sigma_10_cs_0.035_v3.json"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V1} -f dino -n 20 -b 5 -t 10 -m 5 -o {{output.v1}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V2} -f dino -n 20 -b 5 -t 10 -m 5 -o {{output.v2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_5_CS_0_035_V3} -f dino -n 20 -b 5 -t 10 -m 5 -o {{output.v3}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


######################################################################################
#   Simulate multiple genes from two clusters with identical means, but differing
#   correlations that are static within each region. Test how the BR-test performs 
#   as more genes are included in the anlaysis.
######################################################################################

DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS = 'mg_2.corr_between_0_1.static.means_CALML5.spotwise'
DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS = 'mg_4.corr_between_0_1.static.means_CALML5.spotwise'
DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS = 'mg_8.corr_between_0_1.static.means_CALML5.spotwise'

rule generate_data_multiple_genes_two_clusts_static_within_diff_between_0_1_two_to_eight_CALML5:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30) # Should be 30
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30) # Should be 30
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30) # Should be 30
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python simulate_data_between_mult_genes.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_2_diff_corrs_0_1.json -o {config['output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python simulate_data_between_mult_genes.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_4_diff_corrs_0_1.json -o {config['output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python simulate_data_between_mult_genes.py -s spotwise -n 30 -i {config['simulation_configs']}/sim_config_mult_genes_8_diff_corrs_0_1.json -o {config['output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_two_clusts_static_within_diff_between_0_1_two_to_eight_CALML5:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(30)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python run_dino.py -g 2 {config['output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} {config['dino_output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python run_dino.py -g 4 {config['output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} {config['dino_output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python run_dino.py -g 8 {config['output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} {config['dino_output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_multiple_genes_two_clusts_static_within_diff_between_0_1_two_to_eight_CALML5:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ],
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        v1=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_between_dino-mg_2.corr_between_0_1.static_means_CALML5.json",
        v2=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_between_dino-mg_4.corr_between_0_1.static_means_CALML5.json",
        v3=f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_between_dino-mg_8.corr_between_0_1.static_means_CALML5.json"
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_2_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} -f dino -c cluster -w -n 2 -b 5 -t 10 -m 2 -o {{output.v1}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_4_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} -f dino -c cluster -w -n 2 -b 5 -t 10 -m 4 -o {{output.v2}}",
            f"python run_spatial_corr_on_sim_mult_genes.py {config['dino_output_location']}/{DSET_MULT_GENES_8_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} -f dino -c cluster -w -n 2 -b 5 -t 10 -m 8 -o {{output.v3}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)


######################################################################################
#   Simulate datasets with 5 genes with static correlation within each of two 
#   clusters for comparing the joint vs pairwise tests using the BR-test.
######################################################################################
DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS = 'mg_5.corr_between_0_1.static.means_CALML5.spotwise'

rule generate_data_multiple_genes_five_CALML5_two_clusts_static_within_diff_between_0_1:
    output:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(100) 
        ]
    run:
        cmds=[
            f"mkdir -p {config['output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python simulate_data_between_mult_genes.py -s spotwise -n 100 -i {config['simulation_configs']}/sim_config_mult_genes_5_diff_corrs_0_1.json -o {config['output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule dino_normalize_multiple_genes_five_CALML5_two_clusts_static_within_diff_between_0_1:
    input:
        [
            f"{config['output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    output:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(2)
        ]
    run:
        cmds=[
            f"mkdir -p {config['dino_output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}",
            f"python run_dino.py -g 5 {config['output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} {config['dino_output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

rule run_test_between_multiple_genes_five_CALML5_two_clusts_static_within_diff_between_0_1:
    input:
        [
            f"{config['dino_output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS}/{d_i}.tsv"
            for d_i in range(100)
        ]
    output:
        f"{config['spatialcorr_output_location']}/sigma_5_condition_none_test_within_dino-mg_5.corr_between_0_1.static_means_CALML5.json",
    run:
        cmds=[
            f"mkdir -p {config['spatialcorr_output_location']}",
            f"python run_spatialcorr_on_sim_mult_genes_between.py {config['dino_output_location']}/{DSET_MULT_GENES_5_TWO_CLUSTS_NO_SPLIT_DIFF_CORR_0_1_STATIC_MEANS} -c cluster -f dino -n 5 -b 5 -t 10 -m 5 -o {{output}}"
        ]
        for c in cmds:
            shell(f"echo {c}")
            shell(c)

